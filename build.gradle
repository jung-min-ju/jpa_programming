plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'spring'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'//웹과 관련된 기능을 지원
    compileOnly 'org.projectlombok:lombok' //반복적인 코드 작성을 줄여주는 도구. Getter/Setter, equals, hashCode 등의 롬복 메서드를 자동으로 생성
    annotationProcessor 'org.projectlombok:lombok'

    //DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'//JPA(Java Persistence API)를 통해 데이터베이스를 쉽게 다룰 수 있음.
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'//JDBC를 사용해 데이터베이스를 처리하는 작업을 쉽게 할 수 있습니다.
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL 데이터베이스와 연결하기 위한 JDBC 드라이버
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'//redis 사용 위함
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' //queryDsl 사용 위한 spring 3.x의 gradle
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta" //Q클래스 생성
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" //다양한 표준 어노테이션(@PostConstruct, @PreDestroy, @Resource 등)을 제공
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" //엔티티 클래스와 데이터베이스 매핑을 위한 어노테이션(@Entity, @Table, @Id, @Column 등), 트랜젝션 기능을 제공합니다.

    // 환경변수
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
}

tasks.named('test') {
    useJUnitPlatform()
}
